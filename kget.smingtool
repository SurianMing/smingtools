function kget() {
    # option --output/-o requires 1 argument
    LONGOPTS=pods,svc,gateway,httproute,namespace:
    OPTIONS=psghn:

    # -temporarily store output to be able to check for errors
    # -activate quoting/enhanced mode (e.g. by writing out “--options”)
    # -pass arguments only via   -- "$@"   to separate them correctly
    # -if getopt fails, it complains itself to stdout
    PARSED=$(getopt --options=$OPTIONS --longoptions=$LONGOPTS --name "$0" -- "$@") || exit 2
    # read getopt’s output this way to handle the quoting right:
    eval set -- "$PARSED"

    local gettypes=""
    local namespace="--all-namespaces"
    # now enjoy the options in order and nicely split until we see --
    while true; do
        case "$1" in
            -p|--pods)
                gettypes=$([ "$gettypes" == "" ] && echo "pods" || echo "$gettypes,pods")
                shift
                ;;
            -s)
                gettypes=$([ "$gettypes" == "" ] && echo "svc" || echo "$gettypes,svc")
                shift
                ;;
            -g)
                gettypes=$([ "$gettypes" == "" ] && echo "gateway" || echo "$gettypes,gateway")
                shift
                ;;
            -h)
                gettypes=$([ "$gettypes" == "" ] && echo "httproute" || echo "$gettypes,httproute")
                shift
                ;;
            -n)
                namespace="-n $2"
                shift 2
                ;;
            --)
                shift
                break
                ;;
            *)
                echo "Programming error"
                exit 3
                ;;
        esac
    done

    command="kubectl get $gettypes $namespace"

    eval "$command"
}